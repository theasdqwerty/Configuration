""" The Leader Key
let mapleader = " "

""" Editing and Reloading the Config
set clipboard+=unnamed
set clipboard+=ideaput

set history=1000
set showcmd
set which-key
let g:WhichKey_FontSize = 18
let g:WhichKey_CommandColor = "#41ead4"
let g:WhichKey_PrefixColor = "#f335b2"
let g:WhichKey_SortOrder = "by_key_prefix_first"
let g:WhichKeyDesc_leader = "<leader> Leader key"
let g:WhichKey_DefaultDelay = 200
"set notimeout
"set timeoutlen=5000

set scrolloff=5
set sidescrolloff=5
set number relativenumber

set incsearch
set ignorecase
set hlsearch
"nnoremap <silent> <esc> :noh<cr>
"nmap <esc> :noh<cr>

set smartcase
set nrformats-=octal

"map b :NERDTreeMapActivateNode<CR>
set NERDTree
"nnoremap <silent> <C-n> :NERDTreeToggle<CR>
"nnoremap <silent> <-n> <Action>(ActivateProjectToolWindow)<CR>
"let g:NERDTreeMapActivateNode = <Action>(Left)<CR>
"let g:NTPNames = add(g:NTPNames, 'csproj')
"extend(g:NTPNames, ['*.sln', '*.csproj']фывфывфыв)
"set sneak
set keep-english-in-normal
"set ideajoin
set ideamarks

"nnoremap \e :e ~/.ideavimrc<CR>
nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

""" Distraction Free Mode
nnoremap <c-z> :action ToggleDistractionFreeMode<CR>

" Terminal
nnoremap <c-t> :action ActivateTerminalToolWindow<CR>
"nnoremap <leader>t :action Terminal.OpenInTerminal<CR>
nnoremap <leader>t :action ActivateTerminalToolWindow<CR>

" Navigation
nnoremap <TAB> :action NextTab<CR>
nnoremap <S-TAB> :action PreviousTab<CR>
nnoremap tu :action Unsplit<CR>
nnoremap tU :action UnsplitAll<CR>
nnoremap tc :action CloseEditor<CR>
nnoremap tC :action CloseAllEditors<CR>
nnoremap to :tabonly<CR>
"nnoremap tn :action NextTab<CR> 
"nnoremap tp :action PreviousTab<CR>
nnoremap tm :action MoveEditorToOppositeTabGroup<CR>
nnoremap tv :action SplitVertically<CR>
nnoremap ts :action SplitHorizontally<CR>
nnoremap th <c-w>h
nnoremap tl <c-w>l
nnoremap tj <c-w>j
nnoremap tk <c-w>k

"map <leader>1 <Action>(ActivateProjectToolWindow)<CR>
"nmap <leader>0 :action ActivateCommitToolWindow<cr>
"nmap <leader>1 :action SelectInProjectView<cr>
"nmap <leader>2 :action ActivateBookmarksToolWindow<cr>
"nmap <leader>3 :action ActivateFindToolWindow<cr>
"nmap <leader>4 :action ActivateRunToolWindow<cr>
"nmap <leader>5 :action ActivateDebugToolWindow<cr>
"nmap <leader>7 :action ActivateAndroidProfilerToolWindow<cr>
"nmap <leader>8 :action ActivateTerminalToolWindow<cr>
"nmap <leader>9 :action ActivateVersionControlToolWindow<cr>

""" Editing source code
set ideajoin
set idearefactormode=keep

imap <C-j> :action EditorDown<CR>
imap <C-k> :action EditorUp<CR>
imap <C-h> :action EditorLeft<CR>
imap <C-l> :action EditorRight<CR>

nnoremap <C-S-j> :action MoveStatementDown<CR>
nnoremap <C-S-k> :action MoveStatementUp<CR>
nnoremap <C-S-h> :action MoveElementLeft<CR>
nnoremap <C-S-l> :action MoveElementRight<CR>

nnoremap [[ :action MethodUp<cr>
nnoremap ]] :action MethodDown<cr>
nnoremap zc :action CollapseRegion<CR>
nnoremap zo :action ExpandRegion<CR>
nnoremap zC :action CollapseAllRegions<CR>
nnoremap zO :action ExpandAllRegions<CR>

"Left and right vision
nnoremap zH 50zh
nnoremap zL 50zl

""" Searching and Source Code Navigation
nnoremap gf :action Forward<CR>
nnoremap gb :action Back<CR>
nnoremap gj :action JumpToLastChange<CR>
"nnoremap ge :action GotoNextError<CR>
"nnoremap gE :action GotoPreviousError<CR>
nnoremap gD :action GotoTypeDeclaration<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gl :action JumpToLastChange<CR>
nnoremap gh :action ShowErrorDescription<CR>
nnoremap gU :action FindUsages<CR>
nnoremap gu :action ShowUsages<CR>


"nnoremap gc :action GotoClass<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gI :action QuickImplementations<CR>
nnoremap gp :action GotToSuperMethod<CR>
nnoremap gt :action GotoTest<CR>

""" Command
map <c-r> :action RecentFiles<CR>
map <c-/> :action FindInPath<CR>
map <c-a> :action GotoAction<CR>
map <c-f> :action GotoFile<CR>
map <c-s> :action FileStructurePopup<CR>
map <c-o> :action GotoSymbol<CR>
map <c-c> :action GotoClass<CR>
map <c-l> :action RecentLocations<CR>
 
""" Actions
nmap <leader>p :action ActivateProjectToolWindow<CR>
"nmap <leader>g :action 


nnoremap <leader>h :action CallHierarchy<CR>
nnoremap <Leader>= :action ReformatCode<CR>
nnoremap <leader>o :action OptimizeImports<CR>
nnoremap <leader>b :action ToggleLineBreakpoint<CR>
nnoremap <leader>q :action ShowIntentionActions<CR>
nnoremap <leader>r :action Refactorings.QuickListPopupAction<CR>
nnoremap <leader>e :action GotoNextError<CR>
nnoremap <leader>E :action GotoPreviousError<CR>
nnoremap <leader>n :action ReSharperNavigateTo<CR>
nnoremap <leader>x :action HideAllWindows<CR>
nnoremap <leader>d :action QuickJavaDoc<CR>
nnoremap <leader>l :noh<CR>
nnoremap <leader>s :write<CR>

""" Tool windows
nnoremap <c-p> :action JumpToLastWindow<CR>
nnoremap <c-x> :action HideAllWindows<CR>

"nnoremap <leader><leader>r :action Run<CR>
"nnoremap <leader><leader>s :action Stop<CR>
"nnoremap <leader><leader>d :action Debug<CR>
"nnoremap <leader><leader>b :action BuildCurrentProject<CR>

""" Running and Debugging
"nnoremap ,r :action Run<CR>
"nnoremap ,s :action Stop<CR>
"nnoremap ,d :action Debug<CR>
"nnoremap ,b :action BuildCurrentProject<CR>
"nnoremap ,c :action RunClass<CR>
"nnoremap ,f :action ChooseRunConfiguration<CR>
"nnoremap ,t :action ActivateRunToolWindow<CR>
"nnoremap ,u :action Rerun<CR>
"nnoremap ,f :action RerunFailedTests<CR>
"nnoremap ,b :action ToggleLineBreakpoint<CR>
"nnoremap ,n :action ActivateDebugToolWindow<CR>

" Multiple Cursors
"map mx <A-x>
"map mp <A-p>
"map mc <A-n>

" Plugins
packadd matchit		                       

Plug 'easymotion/vim-easymotion'	        # Trigger <space><space>-w, requires IdeaVim-EasyMotion. Lots of mappings
nmap F <Plug>(easymotion-s)
nmap f <Plug>(easymotion-f)

Plug 'dbakker/vim-paragraph-motion'         # Normally the { and } motions only match completely empty lines.
Plug ‘michaeljsmith/vim-indent-object’      # Text indent object

Plug 'kana/vim-textobj-entire'		        # Entire buffer text object: ae
                                            # aw – a word (includes surrounding white space)
                                            # iw – inner word (does not include surrounding white space)
                                            # as – a sentence
                                            # is – inner sentence
                                            # ap – a paragraph
                                            # ip – inner paragraph
                                            
Plug 'machakann/vim-highlightedyank'        # Colorize yank text

Plug 'terryma/vim-multiple-cursors'	        # See below for remapped keys. <A-n> doesn't work on Mac

Plug 'tommcdo/vim-exchange'		            # cx{motion} to select, again to exchange

Plug 'tpope/vim-commentary'		            # [count]gc{motion}, o_gc, v_gc, gcc

Plug 'tpope/vim-surround'		            # ys, cs, ds, S

Plug 'vim-scripts/argtextobj.vim'	        # argument text objects: aa, ia

"Plug 'vim-scripts/ReplaceWithRegister'      # [count]["x]gr{motion}, [count]["x]grr, {Visual}["x]gr

set ideastrictmode
