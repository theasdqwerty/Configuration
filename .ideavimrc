
""" The Leader Key
let mapleader = " "

""" Editing and Reloading the Config
set clipboard+=unnamed
set clipboard+=ideaput

set history=1000
set showcmd
set which-key
"set notimeout
"set timeoutlen=5000

set scrolloff=5
set sidescrolloff=5
set number relativenumber

set incsearch
set ignorecase
set hlsearch

set smartcase
set nrformats-=octal

set NERDTree
set sneak
set keep-english-in-normal
set ideajoin
set ideamarks

nnoremap \e :e ~/.ideavimrc<CR>
nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

""" Distraction Free Mode
nnoremap <c-z> :action ToggleDistractionFreeMode<CR>

""" Terminal
nnoremap <c-t> :action ActivateTerminalToolWindow<CR>
nnoremap <leader>t :action Terminal.OpenInTerminal<CR>

""" Navigation
nnoremap <TAB> :action NextTab<CR>
nnoremap <s-TAB> :action PreviousTab<CR>
nnoremap tu :action Unsplit<CR>
nnoremap tU :action UnsplitAll<CR>
nnoremap tc :action CloseEditor<CR>
nnoremap tC :action CloseAllEditors<CR>
nnoremap to :tabonly<CR>
nnoremap tn :action NextTab<CR> 
nnoremap tp :action PreviousTab<CR>
nnoremap tm :action MoveEditorToOppositeTabGroup<CR>
nnoremap tv :action SplitVertically<CR>
nnoremap ts :action SplitHorizontally<CR>
nnoremap th <c-w>h
nnoremap tl <c-w>l
nnoremap tj <c-w>j
nnoremap tk <c-w>k

""" Editing source code
set ideajoin
set idearefactormode=keep

imap <C-j> <Down>
imap <C-k> <Up>
imap <C-h> <Left>
imap <C-l> <Right>

nnoremap <C-S-j> :action MoveStatementDown<CR>
nnoremap <C-S-k> :action MoveStatementUp<CR>
nnoremap <C-S-h> :action MoveElementLeft<CR>
nnoremap <C-S-l> :action MoveElementRight<CR>

nnoremap [[ :action MethodUp<cr>
nnoremap ]] :action MethodDown<cr>
nnoremap zc :action CollapseRegion<CR>
nnoremap zo :action ExpandRegion<CR>
nnoremap zC :action CollapseAllRegions<CR>
nnoremap zO :action ExpandAllRegions<CR>

"Left and right vision
nnoremap zH 50zh
nnoremap zL 50zl

""" Searching and Source Code Navigation
nnoremap gf :action Forward<CR>
nnoremap gb :action Back<CR>
nnoremap gj :action JumpToLastChange<CR>
nnoremap ge :action GotoNextError<CR>
nnoremap gE :action GotoPreviousError<CR>
nnoremap gD :action GotoTypeDeclaration<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gl :action JumpToLastChange<CR>
nnoremap gh :action ShowErrorDescription<CR>

"nnoremap gc :action GotoClass<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gI :action QuickImplementations<CR>
nnoremap gp :action GotToSuperMethod<CR>
nnoremap gt :action GotoTest<CR>

""" Command
nnoremap <c-r> :action RecentFiles<CR>
nnoremap <c-/> :action FindInPath<CR>
nnoremap <c-a> :action GotoAction<CR>
nnoremap <c-f> :action GotoFile<CR>
nnoremap <c-s> :action FileStructurePopup<CR>
nnoremap <c-o> :action GotoSymbol<CR>
nnoremap <c-c> :action GotoClass<CR>
nnoremap <c-l> :action RecentLocations<CR>
 
""" Actions
nnoremap <leader>U :action FindUsages<CR>
nnoremap <leader>u :action ShowUsages<CR>
nnoremap <leader>h :action CallHierarchy<CR>
nnoremap <Leader>= :action ReformatCode<CR>
nnoremap <leader>o :action OptimizeImports<CR>
nnoremap <leader>b :action ToggleLineBreakpoint<CR>
nnoremap <leader>q :action ShowIntentionActions<CR>
nnoremap <leader>r :action Refactorings.QuickListPopupAction<CR>
nnoremap <leader>e :action GotoNextError<CR>
nnoremap <leader>E :action GotoPreviousError<CR>
nnoremap <leader>n :action ReSharperNavigateTo<CR>
nnoremap <leader>x :action HideAllWindows<CR>
nnoremap <leader>d :action QuickJavaDoc<CR>
nnoremap <leader>l :noh<CR>
nnoremap <leader>s :write<CR>

""" Tool windows
nnoremap <c-p> :action JumpToLastWindow<CR>
nnoremap <c-x> :action HideAllWindows<CR>

nnoremap <leader><leader>r :action Run<CR>
nnoremap <leader><leader>s :action Stop<CR>
nnoremap <leader><leader>d :action Debug<CR>
nnoremap <leader><leader>b :action BuildCurrentProject<CR>

""" Running and Debugging
nnoremap ,r :action Run<CR>
nnoremap ,s :action Stop<CR>
nnoremap ,d :action Debug<CR>
nnoremap ,b :action BuildCurrentProject<CR>
"nnoremap ,c :action RunClass<CR>
"nnoremap ,f :action ChooseRunConfiguration<CR>
"nnoremap ,t :action ActivateRunToolWindow<CR>
"nnoremap ,u :action Rerun<CR>
"nnoremap ,f :action RerunFailedTests<CR>
"nnoremap ,b :action ToggleLineBreakpoint<CR>
"nnoremap ,n :action ActivateDebugToolWindow<CR>

" Plugins
packadd matchit		                       

"Plug 'easymotion/vim-easymotion'	        # Trigger <space><space>-w, requires IdeaVim-EasyMotion. Lots of mappings
"map <leader>F <Plug>(easymotion-s)
"map <leader>f <Plug>(easymotion-f)

Plug 'dbakker/vim-paragraph-motion'       # Normally the { and } motions only match completely empty lines.
Plug ‘michaeljsmith/vim-indent-object’      # Text indent object

Plug 'kana/vim-textobj-entire'		        # Entire buffer text object: ae
                                            # aw – a word (includes surrounding white space)
                                            # iw – inner word (does not include surrounding white space)
                                            # as – a sentence
                                            # is – inner sentence
                                            # ap – a paragraph
                                            # ip – inner paragraph
                                            
Plug 'machakann/vim-highlightedyank'        # Colorize yank text

Plug 'terryma/vim-multiple-cursors'	        # See below for remapped keys. <A-n> doesn't work on Mac

Plug 'tommcdo/vim-exchange'		            # cx{motion} to select, again to exchange

Plug 'tpope/vim-commentary'		            # [count]gc{motion}, o_gc, v_gc, gcc

Plug 'tpope/vim-surround'		            # ys, cs, ds, S

Plug 'vim-scripts/argtextobj.vim'	        # argument text objects: aa, ia

"Plug 'vim-scripts/ReplaceWithRegister'      # [count]["x]gr{motion}, [count]["x]grr, {Visual}["x]gr

set ideastrictmode
